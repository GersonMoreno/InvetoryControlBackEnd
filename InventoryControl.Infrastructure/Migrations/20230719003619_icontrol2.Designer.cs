// <auto-generated />
using System;
using InventoryControl.Infrastructure.Base;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InventoryControl.Infrastructure.Migrations
{
    [DbContext(typeof(IControlContext))]
    [Migration("20230719003619_icontrol2")]
    partial class icontrol2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InventoryControl.Domain.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<decimal>("Costo")
                        .HasColumnType("numeric");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int?>("FacturaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Utilidad")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("FacturaId");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("InventoryControl.Domain.Caja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Cajas");
                });

            modelBuilder.Entity("InventoryControl.Domain.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Facturas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Factura");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("InventoryControl.Domain.Gasto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<bool>("EsConstante")
                        .HasColumnType("boolean");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("boolean");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("integer");

                    b.Property<string>("Valor")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Gasto");
                });

            modelBuilder.Entity("InventoryControl.Domain.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .HasColumnType("text");

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombres")
                        .HasColumnType("text");

                    b.Property<string>("NumeroIdentificacion")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("InventoryControl.Domain.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombres")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("InventoryControl.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .HasColumnType("text");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("boolean");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("text");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("InventoryControl.Domain.Compra", b =>
                {
                    b.HasBaseType("InventoryControl.Domain.Factura");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("integer");

                    b.HasIndex("ProveedorId");

                    b.HasDiscriminator().HasValue("Compra");
                });

            modelBuilder.Entity("InventoryControl.Domain.Venta", b =>
                {
                    b.HasBaseType("InventoryControl.Domain.Factura");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("numeric");

                    b.HasIndex("ClienteId");

                    b.HasDiscriminator().HasValue("Venta");
                });

            modelBuilder.Entity("InventoryControl.Domain.Articulo", b =>
                {
                    b.HasOne("InventoryControl.Domain.Factura", null)
                        .WithMany("Articulos")
                        .HasForeignKey("FacturaId");
                });

            modelBuilder.Entity("InventoryControl.Domain.Caja", b =>
                {
                    b.HasOne("InventoryControl.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("InventoryControl.Domain.Factura", b =>
                {
                    b.HasOne("InventoryControl.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("InventoryControl.Domain.Gasto", b =>
                {
                    b.HasOne("InventoryControl.Domain.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("InventoryControl.Domain.Usuario", b =>
                {
                    b.HasOne("InventoryControl.Domain.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("InventoryControl.Domain.Compra", b =>
                {
                    b.HasOne("InventoryControl.Domain.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("InventoryControl.Domain.Venta", b =>
                {
                    b.HasOne("InventoryControl.Domain.Persona", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("InventoryControl.Domain.Factura", b =>
                {
                    b.Navigation("Articulos");
                });
#pragma warning restore 612, 618
        }
    }
}
